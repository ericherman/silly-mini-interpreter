#!/usr/bin/env perl
use 5.14.2;
use warnings;

my @ops = (
    {   name => "padding",
        paramtypes => [],
    },
    {   name => "addconst",
        paramtypes => [qw(uint int)],
    },
    {   name => "addrel",
        paramtypes => [qw(uint uint)],
    },
    {   name => "subconst",
        paramtypes => [qw(uint int)],
    },
    {   name => "subrel",
        paramtypes => [qw(uint uint)],
    },
    {   name => "mulconst",
        paramtypes => [qw(uint int)],
    },
    {   name => "mulrel",
        paramtypes => [qw(uint uint)],
    },
    {   name => "divconst",
        paramtypes => [qw(uint int)],
    },
    {   name => "divrel",
        paramtypes => [qw(uint uint)],
    },
    {   name => "modconst",
        paramtypes => [qw(uint int)],
    },
    {   name => "modrel",
        paramtypes => [qw(uint uint)],
    },
    {   name => "movconst",
        paramtypes => [qw(uint int)],
    },
    {   name => "movrel",
        paramtypes => [qw(uint uint)],
    },
    {   name => "jump",
        paramtypes => [qw(uint)],
    },
    {   name => "jumpz",
        paramtypes => [qw(uint uint)],
    },
    {   name => "print",
        paramtypes => [qw(uint)],
    },
    {   name => "exit",
        paramtypes => [],
    },
);

sub op_arity {
    my $op = shift;
    return scalar(@{$op->{paramtypes}});
}

sub op_label {
    my $op = shift;
    return "ic_" . $op->{name};
}

sub op_enum {
    my $op = shift;
    return "IC_" . uc($op->{name});
}

sub generate_dispatch_table {
    my ($output_file) = @_;
    my $indent = "    ";
    my @output;

    push @output, "/* DO NOT MODIFY!",
                  " * This code was generated by '$0'. */",
                  "",
                  "static void *dispatch_table[" . scalar(@ops) . "] = {";

    foreach my $op (@ops) {
        push @output, $indent . '&&' . op_label($op) . ",";
    }
    chop $output[-1];
    push @output, "};";

    open my $fh, ">", $output_file or die $!;
    print $fh join "", map "$indent$_\n", @output;
    close $fh;
}

sub generate_c_enum {
    my ($output_file) = @_;

    my $indent = "    ";
    my @output;
    push @output, "/* DO NOT MODIFY!",
                  " * This code was generated by '$0'. */",
                  "",
                  "typedef enum interpreter_command {";

    foreach my $op (@ops) {
        push @output, $indent . op_enum($op) . ",";
    }
    chop $output[-1];

    push @output, "} interpreter_command_t;";

    open my $fh, ">", $output_file or die $!;
    print $fh join "", map "$indent$_\n", @output;
    close $fh;
}

sub generate_perl_enum {
    my ($output_file) = @_;

    my $indent = "    ";
    my @output;
    push @output, "package ASM::Enum;",
                  "use 5.14.2;\nuse warnings;",
                  "# DO NOT MODIFY!",
                  "# This code was generated by '$0'.",
                  "",
                  "push \@ASM::Constants, qw(";

    foreach my $op (@ops) {
        push @output, $indent . op_enum($op);
    }

    push @output, ");\n1;";

    open my $fh, ">", $output_file or die $!;
    print $fh join "", map "$_\n", @output;
    close $fh;
}

generate_dispatch_table("dispatch_table.h.inc");
generate_c_enum("command_enum.h.inc");
generate_perl_enum("lib/ASM/Enum.pm");
